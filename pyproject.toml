[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "redland-forge"
version = "1.0.3"
description = "A distributed build orchestrator for monitoring and managing parallel builds across multiple remote hosts."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.6"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]
keywords = ["build", "orchestration", "distributed", "parallel", "ssh", "tui", "terminal", "ci", "cd", "redland"]
authors = [
    {name = "Dave Beckett", email = "dave@dajobe.org"},
]
maintainers = [
    {name = "Dave Beckett", email = "dave@dajobe.org"},
]

dependencies = [
    "blessed>=1.20.0",
    "paramiko>=3.3.1",
]

[project.scripts]
redland-forge = "redland_forge.app:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/dajobe/redland-forge"
Repository = "https://github.com/dajobe/redland-forge"
Issues = "https://github.com/dajobe/redland-forge/issues"
Changelog = "https://github.com/dajobe/redland-forge/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["redland_forge"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
redland_forge = ["*.py", "*.md", "*.txt"]
"*" = ["images/*"]

[tool.black]
line-length = 88
target-version = ['py36']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "blessed.*",
    "paramiko.*",
]
ignore_missing_imports = true
