#!/bin/sh
#
# Build redland and check it works.  Intended to be called via build-redland-on
#
# $Id$
#

program=`basename $0`

tarball=$1
if [ "X$tarball" = "X" ]; then
  echo "USAGE $program: PACKAGE-TARBALL" 1>&2
  exit 1
fi

if [ ! -r $tarball ]; then
  echo "$program: tarball $tarball not found"
  exit 1
fi

dirname=`echo $tarball | sed -e 's,^.*/,,' -e 's/\.tar.gz$//'`
package=`echo $dirname | sed -e 's/-.*$//'`
version=`echo $dirname | sed -e 's/^.*-//'`

here=`pwd`

this=build

# DIRS
working=$here/$this
logs=$working/logs
build=$working/$dirname

# FILES
log_file=$logs/$program.log

######################################################################

echo "$program: Building $package $version"
echo "$program: System       `uname -srmn`"
echo "$program: Working area $working"
echo "$program: Logs         $logs"

rm -rf $working
mkdir $working $logs
cd $working

MAKE=make
for make in gnumake gmake make; do
  ($make --version 2>&1 | grep 'GNU Make') >/dev/null
  result=$?
  if test $result -eq 0 ; then
    MAKE=$make
    break
  fi
done
export MAKE


gunzip < $here/$tarball | tar xf -

cd $build

# Linux, Solaris, FreeBSD
here=`pwd`
LD_LIBRARY_PATH=$here/librdf/.libs:$here/raptor/.libs
export LD_LIBRARY_PATH
# OSX
DYLD_LIBRARY_PATH=$here/librdf/.libs:$here/raptor/.libs
export DYLD_LIBRARY_PATH

gnu_arch=`./config.guess`
echo "$program: GNU System   $gnu_arch"

configure="./configure"

# Non-standard JDK places
for jdkdir in `ls -1dr /usr/local/packages/j2sdk* 2>/dev/null`; do
  if [ -r $jdkdir/include/jni.h ]; then
    configure="$configure --with-jdk=$jdkdir"
    PATH=$jdkdir/bin:$PATH
    break
  fi
done

for jdkdir in `ls -1dr /usr/local/jdk* 2>/dev/null` /usr/j2se `ls -1dr /usr/lib/java* 2>/dev/null`; do
  if [ -d $jdkdir -a -r $jdkdir/bin/java ]; then
    PATH=$jdkdir/bin:$PATH
    break;
  fi
done

hostname=`hostname`
case $hostname in
  hedwig.dajobe.org)
    RUBY=ruby1.8
    export RUBY
    # 8.4 does not seem to work
    TCL=tclsh8.3
    export TCL
    ;;
  tribble.ilrt.bris.ac.uk)
    # FreeBSD makes you use one version
    TCL=tclsh8.3
    export TCL
    ;;
  maris)
    TCL=tclsh8.3
    export TCL
    ;;
  *)
    ;;
esac


$configure > $logs/configure.log 2>&1
status=$?
if [ $status -ne 0 ]; then
  echo "$program: '$configure' failed"
  exit 1;
fi

echo "$program: '$configure' succeeded"

sed -n -e '/Languages available/,/Berkeley/p' $logs/configure.log

$MAKE > $logs/make.log 2>&1
status=$?
if [ $status -ne 0 ]; then
  echo "$program: '$MAKE' failed"
  exit 1;
fi

echo "$program: '$MAKE' succeeded"

$MAKE check > $logs/make-check.log 2>&1
status=$?
if [ $status -ne 0 ]; then
  echo "$program: '$MAKE check' failed"
  grep '^FAIL:' $logs/make-check.log
  exit 1;
fi

echo "$program: '$MAKE check' succeeded"

LANGS_FAILED=
LANGS_OK=
LANGS=
for lang in perl python tcl java ruby php; do
  if [ -d $lang ]; then 
    cd $lang
    $MAKE test-$lang > $logs/$lang.log 2>&1
    status=$?
    if [ $status -ne 0 ]; then
      LANGS_FAILED="$LANGS_FAILED $lang"
    else
      LANGS_OK="$LANGS_OK $lang"
    fi
    cd ..
    LANGS="$LANGS $lang"
  fi
done

if [ "X$LANGS" = X ]; then
  echo "$program: No language interfaces to build"
else
  echo "$program: Summary of language interface builds:"
  echo "  OK      $LANGS_OK"
  echo "  FAILED  $LANGS_FAILED"
fi

exit 0
